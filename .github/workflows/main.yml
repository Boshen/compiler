on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - main

name: Main

jobs:
  main:
    name: Run cargo fmt, clippy and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        run: rustup show

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy --workspace --all-targets -- --deny warnings

      - name: Run cargo check
        run: cargo check --workspace --all-targets --release

  coverage:
    name: Run Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        run: rustup show

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.19.0'
          args: '-- --test-threads 1'

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: cobertura.xml

  bloat:
    name: Track Release Binary Size
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        run: rustup show

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Add Cargo Bloat
        run: cargo install cargo-bloat --no-default-features

      - uses: actions/download-artifact@v2
        continue-on-error: true # Continue without existing file
        with:
          name: release-build-size
          path: release-build-size.jsonl # JSON Line Format

      - name: Save Cargo Bloat Output
        run: |
          cargo bloat --release --crates --message-format json > bloat.json
          cat bloat.json
          jq --argjson commit '{"commit":"${GITHUB_SHA::6}"}' '$commit + .' bloat.json >> release-build-size.jsonl

      - name: Upload Cargo Bloat Output
        uses: actions/upload-artifact@v2
        with:
          name: release-build-size
          path: release-build-size.jsonl # Use `jq -s '.' release-build-size.jsonl` to get JSON

  benchmark:
    name: Track Release Benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        run: rustup show

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Run Benchmark
        run: cargo bench

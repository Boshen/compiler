---
source: crates/lexer/tests/lib.rs
assertion_line: 16
expression: numeric_literal

---
# Input
0 0n
0b1 0B12
0o1 0O12
0x1 0X12
0123 0789
0. 0.0 0.123
1n
123n
1.0 1.1 1.1.foo
0E-1 0E+1 0e-12 0e+12
0e0 0e00 0e01
1e1 1e23
1.0e1 1.0e1

---
# Output
[
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 0,
        len: 1,
    },
    Token {
        kind: Number(
            BigInt,
        ),
        offset: 2,
        len: 2,
    },
    Token {
        kind: LineTerminator,
        offset: 4,
        len: 1,
    },
    Token {
        kind: Number(
            Binary,
        ),
        offset: 5,
        len: 3,
    },
    Token {
        kind: Number(
            Binary,
        ),
        offset: 9,
        len: 3,
    },
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 12,
        len: 1,
    },
    Token {
        kind: LineTerminator,
        offset: 13,
        len: 1,
    },
    Token {
        kind: Number(
            Octal,
        ),
        offset: 14,
        len: 3,
    },
    Token {
        kind: Number(
            Octal,
        ),
        offset: 18,
        len: 4,
    },
    Token {
        kind: LineTerminator,
        offset: 22,
        len: 1,
    },
    Token {
        kind: Number(
            Hex,
        ),
        offset: 23,
        len: 3,
    },
    Token {
        kind: Number(
            Hex,
        ),
        offset: 27,
        len: 4,
    },
    Token {
        kind: LineTerminator,
        offset: 31,
        len: 1,
    },
    Token {
        kind: Number(
            Octal,
        ),
        offset: 32,
        len: 4,
    },
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 37,
        len: 4,
    },
    Token {
        kind: LineTerminator,
        offset: 41,
        len: 1,
    },
    Token {
        kind: Number(
            Float,
        ),
        offset: 42,
        len: 2,
    },
    Token {
        kind: Number(
            Float,
        ),
        offset: 45,
        len: 3,
    },
    Token {
        kind: Number(
            Float,
        ),
        offset: 49,
        len: 5,
    },
    Token {
        kind: LineTerminator,
        offset: 54,
        len: 1,
    },
    Token {
        kind: Number(
            BigInt,
        ),
        offset: 55,
        len: 2,
    },
    Token {
        kind: LineTerminator,
        offset: 57,
        len: 1,
    },
    Token {
        kind: Number(
            BigInt,
        ),
        offset: 58,
        len: 4,
    },
    Token {
        kind: LineTerminator,
        offset: 62,
        len: 1,
    },
    Token {
        kind: Number(
            Float,
        ),
        offset: 63,
        len: 3,
    },
    Token {
        kind: Number(
            Float,
        ),
        offset: 67,
        len: 3,
    },
    Token {
        kind: Number(
            Float,
        ),
        offset: 71,
        len: 3,
    },
    Token {
        kind: Dot,
        offset: 74,
        len: 1,
    },
    Token {
        kind: Ident,
        offset: 75,
        len: 3,
    },
    Token {
        kind: LineTerminator,
        offset: 78,
        len: 1,
    },
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 79,
        len: 4,
    },
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 84,
        len: 4,
    },
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 89,
        len: 5,
    },
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 95,
        len: 5,
    },
    Token {
        kind: LineTerminator,
        offset: 100,
        len: 1,
    },
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 101,
        len: 3,
    },
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 105,
        len: 4,
    },
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 110,
        len: 4,
    },
    Token {
        kind: LineTerminator,
        offset: 114,
        len: 1,
    },
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 115,
        len: 3,
    },
    Token {
        kind: Number(
            Decimal,
        ),
        offset: 119,
        len: 4,
    },
    Token {
        kind: LineTerminator,
        offset: 123,
        len: 1,
    },
    Token {
        kind: Number(
            Float,
        ),
        offset: 124,
        len: 5,
    },
    Token {
        kind: Number(
            Float,
        ),
        offset: 130,
        len: 5,
    },
    Token {
        kind: EOF,
        offset: 135,
        len: 1,
    },
]
